@page "/"
@using System.Timers
@implements IDisposable


<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>
This code is from Pages/Index.razor
@((MarkupString)text)
<br />
<h1 style="color:red">@datetime</h1>
<SurveyPrompt Title="How is Blazor working for you?" />

@code {
    //把一个字符串作为为HTML代码输出到页面中。
    string text = "<h2>This is a h2 element from C# code</h2>";

    //启动一个计时器，每秒钟更新一次页面。
    private string datetime;
    private Timer timer;

    //不使用OnInitialized是因为，当前主页会被二次渲染，方法会被调用两次，还是会创建两个Timer实例。
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            datetime = DateTime.Now.ToString("dd-MM-yyyy hh:mm:ss ttt");
            timer = new Timer();
            timer.Interval = 1000;
            timer.Elapsed += OnTimerElapsed;
            timer.Enabled = true;
            Console.WriteLine("OnInitialized run at: " + datetime);
        }
        base.OnAfterRender(firstRender);

    }

    private void OnTimerElapsed(object? sender, ElapsedEventArgs e)
    {
        datetime = DateTime.Now.ToString("dd-MM-yyyy hh:mm:ss tt");
        Console.WriteLine(datetime);
        //通知刷新页面
        InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    //释放资源，如果不手动释放。则每次载入当前页面就会创建一个Timer的实例。
    //该方法在浏览器刷新的情况下不起作用，每次刷新都会创建一个实例。暂时不知道怎么解决。
    public void Dispose()
    {
        timer?.Dispose();
    }

}